<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Who am I ?</title>
    <description>A blog about development</description>
    <link>https://sunoko.github.io/whoami/</link>
    <atom:link href="https://sunoko.github.io/whoami/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 23 May 2017 20:30:49 +0900</pubDate>
    <lastBuildDate>Tue, 23 May 2017 20:30:49 +0900</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>PowershellでLast Login Userを調べる</title>
        <description>&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;Get-LastLogon &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CmdletBinding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Computer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$env&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:COMPUTERNAME&quot;&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WQLFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;NOT SID = 'S-1-5-18' AND NOT SID = 'S-1-5-19' AND NOT SID = 'S-1-5-20'&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Win32User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Get-WmiObject&lt;/span&gt; -Class Win32_UserProfile -Filter &lt;span class=&quot;nv&quot;&gt;$WQLFilter&lt;/span&gt; -ComputerName &lt;span class=&quot;nv&quot;&gt;$Computer&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$LastUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Win32User&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;Sort-Object&lt;/span&gt; -Property LastUseTime -Descending | &lt;span class=&quot;nb&quot;&gt;Select-Object&lt;/span&gt; -First 1 &lt;span class=&quot;nv&quot;&gt;$Loaded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$LastUser&lt;/span&gt;.Loaded &lt;span class=&quot;nv&quot;&gt;$Script&lt;/span&gt;:Time &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;WMI]&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.ConvertToDateTime&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LastUser&lt;/span&gt;.LastUseTime&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#Convert SID to Account for...</description>
        <pubDate>Tue, 23 May 2017 06:18:24 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/powershell-lastlogin/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/powershell-lastlogin/</guid>
        
        <category>powershell</category>
        
        
      </item>
    
      <item>
        <title>Powershellでプロセスを監視する</title>
        <description>&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;Watch-Process &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ProcessName&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Span&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$process&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Get-Process&lt;/span&gt; -Name &lt;span class=&quot;nv&quot;&gt;$ProcessName&lt;/span&gt; -ErrorAction SilentlyContinue &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;!&lt;span class=&quot;nv&quot;&gt;$process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Write-Host&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;not exist &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ProcessName&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$process&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Start-Sleep&lt;/span&gt; -Second &lt;span class=&quot;nv&quot;&gt;$Span&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; Watch-Process -ProcessName wuauclt -Span 60 &lt;span class=&quot;c1&quot;&gt;# Handles NPM(K) PM(K) WS(K) CPU(s) Id SI ProcessName&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# ------- ------ ----- ----- ------ -- -- -----------&lt;/span&gt; &lt;span...</description>
        <pubDate>Mon, 22 May 2017 17:03:59 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/powershell-watch/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/powershell-watch/</guid>
        
        <category>powershell</category>
        
        
      </item>
    
      <item>
        <title>Powershellで保留されているRebootがあるか確認する</title>
        <description>&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;Get-PendingReboot &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CmdletBinding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Computer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$env&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:COMPUTERNAME&quot;&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$RenameComputer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$false&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$RenameFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$false&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Pending&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$false&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CBSRebootPend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$false&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Making registry connection to the local/remote computer &lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$HKLM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;UInt32] &lt;span class=&quot;s2&quot;&gt;&quot;0x80000002&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$WMI_Reg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;WMIClass] &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Computer&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;oot&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;efault:StdRegProv&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# CBS&lt;/span&gt; &lt;span...</description>
        <pubDate>Mon, 22 May 2017 17:03:44 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/powershell-pending-reboot/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/powershell-pending-reboot/</guid>
        
        <category>powershell</category>
        
        
      </item>
    
      <item>
        <title>Railsのapiモードを使ってみる</title>
        <description>&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rails new rails-api --api rails g scaffold users name:string email:string rails db:create rails db:migrate rails c User.create&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name:&lt;span class=&quot;s2&quot;&gt;&quot;chinone&quot;&lt;/span&gt;,email:&lt;span class=&quot;s2&quot;&gt;&quot;chinone@chinone.com&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; curl http://localhost:3000/users &lt;span class=&quot;c&quot;&gt;# [&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# {&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &quot;id&quot;: 1,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &quot;name&quot;: &quot;chinone&quot;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &quot;email&quot;: &quot;chinone@chinone.com&quot;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &quot;created_at&quot;: &quot;2017-05-19T07:00:17.309Z&quot;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &quot;updated_at&quot;: &quot;2017-05-19T07:00:17.309Z&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# }&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# ]&lt;/span&gt; rails g scaffold book title author_name published_on:date rails db:migrate rails c Book.create&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;title:&lt;span class=&quot;s2&quot;&gt;&quot;rails books&quot;&lt;/span&gt;,author_name:&lt;span class=&quot;s2&quot;&gt;&quot;kazuki&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; curl http://localhost:3000/books &lt;span class=&quot;c&quot;&gt;# [&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# {&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &quot;id&quot;: 1,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &quot;title&quot;: &quot;rails books&quot;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &quot;author_name&quot;: &quot;kazuki&quot;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# &quot;published_on&quot;: null,&lt;/span&gt;...</description>
        <pubDate>Mon, 22 May 2017 17:03:20 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/rails-api/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/rails-api/</guid>
        
        <category>rails</category>
        
        
      </item>
    
      <item>
        <title>PowershellでHyperVのVM作成自動化</title>
        <description>&lt;h2 id=&quot;hyper-vのvm作成自動化とテスト&quot;&gt;Hyper-VのVM作成自動化とテスト&lt;/h2&gt; &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;New-HyperVVirtualMachine &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;&amp;lt;# .SYNOPSIS Create virtual machine on Hyper-V using template vhdx file. .EXAMPLE New-HyperVVirtualMachine -VMNames $VMNames -VHDXSourcePath $VHDXSourcePath .NOTES Should be prepared template vhdx file. Should run local administrator user. #&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CmdletBinding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Parameter&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ValueFromPipeline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$true&lt;/span&gt;,Mandatory&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VMNames&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Parameter&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Mandatory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VHDXDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Get-VMHost&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.VirtualHardDiskPath, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Parameter&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Mandatory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VHDXSourcePath&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Parameter&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Mandatory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span...</description>
        <pubDate>Thu, 18 May 2017 06:27:26 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/powershell-hyperv/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/powershell-hyperv/</guid>
        
        <category>powershell</category>
        
        
      </item>
    
      <item>
        <title>Powershellでユニットテスト</title>
        <description>&lt;h2 id=&quot;mockの使い方と使用例&quot;&gt;Mockの使い方と使用例&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Out-Hostをテストしようとすると、return valueは空のためテストが難しい&lt;/li&gt; &lt;li&gt;同じくGet-Dateのように変動的な結果のもののテストも難しい&lt;/li&gt; &lt;li&gt;そんな時にMockを使用する&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;sample-code&quot;&gt;Sample Code&lt;/h3&gt; &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Write&lt;/span&gt;-TimeAndWord &lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$date_01&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Get-Date &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$word&lt;/span&gt; -eq &lt;span class=&quot;s2&quot;&gt;&quot;TEST_01&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$date_02&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Get-Date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TEST_&quot;&lt;/span&gt; + &lt;span class=&quot;nv&quot;&gt;$word&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;Out-Host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Describe &lt;span class=&quot;s1&quot;&gt;'Write-TimeAndWord'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; Context &lt;span class=&quot;s2&quot;&gt;&quot;First Test&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$word&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;TEST_01&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Get-DateをMockで上書きする&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Get-Dateを実行すると結果が&quot;2017/03/31 06:00:00&quot;に固定できる&lt;/span&gt; Mock &lt;span class=&quot;nb&quot;&gt;Get-Date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span...</description>
        <pubDate>Thu, 18 May 2017 06:26:57 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/powershell-pester/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/powershell-pester/</guid>
        
        <category>powershell</category>
        
        
      </item>
    
      <item>
        <title>PowershellでClosureを使ってみた</title>
        <description>&lt;h2 id=&quot;powershellでクロージャー使用例&quot;&gt;Powershellでクロージャー使用例&lt;/h2&gt; &lt;p&gt;非常に長いパラメータセットになりがちなので、データとコードをオブジェクトにラップする　 メッセージ作成スクリプトの再利用単純化&lt;/p&gt; &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;Get-MessageObject &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$MsgType&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Message&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CurrentDay&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CurrentTime&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DayOfWeek&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Properties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; @&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'MessageType'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$MsgType&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Message'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Message&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CurrentDay'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$CurrentDay&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CurrentTime'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$CurrentTime&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'DayOfWeek'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$DayOfWeek&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;New-Object&lt;/span&gt; -TypeName psobject -Property &lt;span class=&quot;nv&quot;&gt;$Properties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;New-MessageGenerator &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span...</description>
        <pubDate>Thu, 18 May 2017 06:26:38 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/powershell-closure/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/powershell-closure/</guid>
        
        <category>powershell</category>
        
        
      </item>
    
      <item>
        <title>Powershellで関数とクラスのreturnの違い</title>
        <description>&lt;h2 id=&quot;関数のreturn&quot;&gt;関数の&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;現在のスコープを抜ける&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;はあってもなくてもいい&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;以外の他のオブジェクトも返す&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;Test-Return
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;12
	&lt;span class=&quot;s1&quot;&gt;'Good'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

Test-Return
&lt;span class=&quot;c1&quot;&gt;# Hello&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 12&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;クラスのreturn&quot;&gt;クラスの&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;現在のスコープを抜ける&lt;/li&gt;
  &lt;li&gt;returnは必須(ない場合errorになる)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;で指定されたものだけ返す&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class &lt;/span&gt;ReturnTester
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;int32]TestReturn&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;12
        &lt;span class=&quot;s1&quot;&gt;'Good'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;New-Object&lt;/span&gt; -TypeName ReturnTester
&lt;span class=&quot;nv&quot;&gt;$return&lt;/span&gt;.TestReturn&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 12&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 18 May 2017 06:18:24 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/powershell-return/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/powershell-return/</guid>
        
        <category>powershell</category>
        
        
      </item>
    
      <item>
        <title>geeksjob</title>
        <description>&lt;p&gt;リツアンの紹介
特定派遣エンジニアが思う不満
特定派遣エンジニアがこうなれたらいいと思うこと
リツアンの特徴
満たしてねw？&lt;/p&gt;
</description>
        <pubDate>Thu, 18 May 2017 06:12:07 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/geeksjob/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/geeksjob/</guid>
        
        <category>働き方</category>
        
        
      </item>
    
      <item>
        <title>levatech</title>
        <description>&lt;p&gt;リツアンの紹介
特定派遣エンジニアが思う不満
特定派遣エンジニアがこうなれたらいいと思うこと
リツアンの特徴
満たしてねw？&lt;/p&gt;
</description>
        <pubDate>Thu, 18 May 2017 06:11:53 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/levatech/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/levatech/</guid>
        
        <category>働き方</category>
        
        
      </item>
    
      <item>
        <title>ritsuan</title>
        <description>&lt;h2 id=&quot;リツアンの紹介&quot;&gt;リツアンの紹介&lt;/h2&gt;

&lt;p&gt;エンジニアの給料にこだわっている。数字で表すと、他の派遣会社よりマージン率が10%～20％低い。
なぜそれが可能なのかというと『経費削減』、『本部の小規模運営』、『効率化』に取り組んでいるから。
具体的には、&lt;strong&gt;間接部門が少ない&lt;/strong&gt;, &lt;strong&gt;本社をどーん！と構えていない&lt;/strong&gt;この２点だと個人的には思います。&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;会社情報 2017年3月末現在&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;設立&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2007年&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;社員数&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;406名&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;平均年齢&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;32.2歳&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;本社&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;静岡県掛川市&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;特定派遣エンジニアが思う不満&quot;&gt;特定派遣エンジニアが思う不満&lt;/h2&gt;
&lt;p&gt;謎の全社ミーティング。無駄な社内活動。給料は社内の評価。&lt;br /&gt;
一番くそだなぁと思うのは給料は社内の評価ですね。コレを無くせば他も解決するんじゃないかなと思います。&lt;/p&gt;

&lt;p&gt;給料は実際にお金を払っているお客様が、そのエンジニアにいくら払いたいか。これで給料決めていいと思います。
そうするとチームやら、部署ごとの売り上げがどうとか、こんな業務改善をしました的な報告会とかいらなくなるんじゃないでしょうか。社内ナレッジ共有のためとか、そのミーティングのための経費が無駄です。&lt;/p&gt;

&lt;p&gt;社内にナレッジを共有したいなら、社内のSharePointとかに記事をあげたら○○円。記事の質の評価は少々難しいですが、みたいな報酬制だと個人的には納得いきますし、強制的な報告会よりは全然質が上がる気がします。&lt;/p&gt;

&lt;h2 id=&quot;特定派遣エンジニアが思うこんな会社で働きたい&quot;&gt;特定派遣エンジニアが思うこんな会社で働きたい&lt;/h2&gt;
&lt;p&gt;『ある程度の給料担保するし、面白い技術使っていこう！』こんなビジョンが理想です。まぁ、こんなビジョンじゃ市場で生き残れないので論外ですがw&lt;/p&gt;

&lt;p&gt;会社には魅力あるビジョンがあって欲しいです。先進的な技術を扱っていくことや、こんなWebサービスを通して社会を豊かにしたいとか、わかります。ぜひ携わりたいです。ただ、ある程度の給料があった上で携わりたいんですね。&lt;/p&gt;

&lt;p&gt;まず、年収。次に興味のある技術。これが自分の仕事を選ぶ基準です。正直、社会貢献系や誰かのために系のビジョンとかどうでもいいです。ただの一般エンジニア目線からしたら。&lt;/p&gt;

&lt;h2 id=&quot;リツアンの特徴&quot;&gt;リツアンの特徴&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;間接部門が少ない&lt;/strong&gt;
エンジニアが紹介する営業。エンジニアが現場や知り合いに対して自社はこんな感じで働けて、こんな給料体系ですよと紹介するのがメインだそうです。自分が知り合いに紹介する場合、本当に満足いっていないと紹介しません。ので、本当にエンジニアが満足していないと成立しない方法だと思います。そのため、営業が少ない。&lt;/p&gt;

&lt;p&gt;請求書や給与計算をエンジニアが行う。請求書作成は面倒かと思いますが、その分給料が上がるのであれば自分はぜひやりたいと思います。慣れれば隙間時間でチョチョっとできるのではないでしょうか。そのため、間接部門が少ない。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;本社をどーん！と構えていない&lt;/strong&gt;
東京や横浜にも事業所があるようですが、月２０万以下だそうです。本社にいたっては月約17万だそうです。本社が立派だとお客さんを無駄に招待をすることがありますが、派遣会社なのでお客さんが本社に来る必要性はありません。非常に理にかなっていると思います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;給料はお客様と契約した額次第&lt;/strong&gt;
給料を上げる方法は、社内での評価は関係ありません。お客様との単価交渉です。つまり謎の年功序列はなく、経験次第になります。
年齢を重ねれば経験値が増えて単価が上がるので、年齢に比例はすると思いますが、謎ではないですね。&lt;/p&gt;

&lt;h2 id=&quot;満たしてねw&quot;&gt;満たしてねw？&lt;/h2&gt;
</description>
        <pubDate>Thu, 18 May 2017 06:11:33 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/ritsuan/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/ritsuan/</guid>
        
        <category>働き方</category>
        
        
      </item>
    
      <item>
        <title>Docker上でRails開発環境を構築する</title>
        <description>&lt;h2 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;ベースイメージはruby:2.4を使用します。&lt;/li&gt; &lt;li&gt;ベースイメージの更新を行います。&lt;/li&gt; &lt;li&gt;ENTRYKITを使用します。ENTRYKITとは、&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM ruby:2.4 RUN apt-get update -qq &amp;amp;&amp;amp; \ apt-get install -y build-essential libpq-dev nodejs RUN mkdir /app WORKDIR /app ADD Gemfile /app/Gemfile ADD Gemfile.lock /app/Gemfile.lock ADD . /app RUN bundle config build.nokogiri --use-system-libraries EXPOSE 5000 ENV ENTRYKIT_VERSION 0.4.0 RUN wget https://github.com/progrium/entrykit/releases/download/v${ENTRYKIT_VERSION}/entrykit_${ENTRYKIT_VERSION}_Linux_x86_64.tgz \ &amp;amp;&amp;amp; tar -xvzf entrykit_${ENTRYKIT_VERSION}_Linux_x86_64.tgz \ &amp;amp;&amp;amp; rm entrykit_${ENTRYKIT_VERSION}_Linux_x86_64.tgz \ &amp;amp;&amp;amp; mv entrykit /bin/entrykit \ &amp;amp;&amp;amp; chmod +x /bin/entrykit \ &amp;amp;&amp;amp; entrykit --symlink ENTRYPOINT [ \ &quot;prehook&quot;, &quot;ruby -v&quot;, &quot;--&quot;, \ &quot;prehook&quot;, &quot;bundle install -j3 --quiet&quot;, &quot;--&quot;] &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h2 id=&quot;docker-composeyml&quot;&gt;docker-compose.yml&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;app, spring, db, dataコンテナー4つを作成します。&lt;/li&gt; &lt;li&gt;appはrailsが実行されるコンテナーです。&lt;/li&gt; &lt;li&gt;springはなくてもいいです。rails開発を高速化したい場合は使用しましょう。&lt;/li&gt; &lt;li&gt;dbはpostgresが実行されるコンテナーです。appコンテナーから参照されます。&lt;/li&gt; &lt;li&gt;dataはデータを格納するコンテナーです。app,...</description>
        <pubDate>Wed, 17 May 2017 03:48:33 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/docker-rails/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/docker-rails/</guid>
        
        <category>docker</category>
        
        <category>rails</category>
        
        
      </item>
    
      <item>
        <title>VagrantでRails on Docker開発環境を構築する</title>
        <description>&lt;h2 id=&quot;vagrantfile&quot;&gt;Vagrantfile&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;ベースイメージにはubuntu-16.04を使用します。&lt;/li&gt; &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;config.vm.provision &quot;docker&quot;&lt;/code&gt;、&lt;br /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;config.vm.provision :docker_compose&lt;/code&gt;&lt;br /&gt; これでDockerとdocker-composeをインストールしてもらいます。&lt;/li&gt; &lt;li&gt;docker上でrailsアプリを起動した際(rails s)には、&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:5000&lt;/code&gt;にアクセスするとブラウザからアクセスできます。&lt;/li&gt; &lt;li&gt;ポートは&lt;code class=&quot;highlighter-rouge&quot;&gt;config.vm.network &quot;forwarded_port&quot;, guest: 3000, host: 5000&lt;/code&gt;で自由に変更できます。&lt;/li&gt; &lt;li&gt;localのエディタでコードを編集した場合、変更が反映されません。ので、&lt;code class=&quot;highlighter-rouge&quot;&gt;config.vm.synced_folder&lt;/code&gt;こちらでrsync使いましょう。&lt;/li&gt; &lt;li&gt;メモリーなどのVMのハード面は&lt;code class=&quot;highlighter-rouge&quot;&gt;vb.memory = &quot;4096&quot;&lt;/code&gt;このように調整しましょう。&lt;/li&gt; &lt;li&gt;起動時(vagrant up)にシェルスクリプトを走らせて、必要なものをインストール自動化しましょう。このように&lt;code class=&quot;highlighter-rouge&quot;&gt;config.vm.provision :shell, :path =&amp;gt; &quot;setup.sh&quot;, privileged: true&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# -*- mode: ruby -*-&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# vi: set ft=ruby :&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bento/ubuntu-16.04&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provision&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;docker&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provision&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:docker_compose&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;network&lt;/span&gt; &lt;span...</description>
        <pubDate>Wed, 17 May 2017 03:44:12 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/vagrant/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/vagrant/</guid>
        
        <category>vagrant</category>
        
        <category>docker</category>
        
        <category>rails</category>
        
        
      </item>
    
      <item>
        <title>エンジニアの働き方は正社員、派遣、フリーランスって色々あるけどどれがコスパいいの？</title>
        <description>&lt;blockquote&gt;
  &lt;h2 id=&quot;個人的見解&quot;&gt;個人的見解&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;p&gt;未経験者 ⇨ 正社員&lt;br /&gt;
何も極めていない経験者 ⇨ 正社員、派遣&lt;br /&gt;
自他共に認める経験者 ⇨ フリーランス&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;未経験&lt;/strong&gt;で正社員になれるのかという問題はありますが、コスパのみで考えましたのでご了承ください。正社員で雇った以上は未経験者であろうが、なんとか案件に突っ込もうとします。そうしないと何もしない人に対して給料払わなくてはならないので、勝手に頑張ってくれます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;逆にいう&lt;/strong&gt;と希望は通りませんwその会社が持ってる案件と、その案件がたまたま人員を欲しているということと、欲している人員のレベルを満たしているという確率を通り抜ける必要があるので運のみですね。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;何も極めて&lt;/strong&gt;いない経験者は、オールラウンダーやらフルスタックエンジニアやらいい言い方はできるかもしれませんが、給料上がりにくいような気がします。&lt;br /&gt;
なぜなら、何でもできるとは言え一人のキャパは限られているので実際案件の一部分しかこなせません。つまり、その一部分に必要な技術しかない人でもできちゃいます。結果、その一部分に必要な技術の人と評価は一緒になるんじゃないかと思います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一方で&lt;/strong&gt;、ある技術にかなり精通した人の場合はその人しかできない仕事になるので給料が上がりやすいのではないでしょうか。そんな人はフリーランスが最善かと。個人的に思います。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h2 id=&quot;特定派遣について思うこと&quot;&gt;特定派遣について思うこと&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;派遣&lt;/strong&gt;エンジニアになって5年経ちます。派遣といっても正社員として採用されて、お客様先に派遣される形態のいわゆる特定派遣というものです。正社員であることのメリットはもし、仕事がなくなっても給料は変わらないことくらいかなぁ。暇すぎる社内待機で精神的にはきついかもw新卒として入った会社なので同期がいたり、社内研修やら資格取得のための費用を負担してくれるのはありがたいと思います。が、5年目ともなるとそのような恩恵はほぼ皆無だとに感じています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;正社員&lt;/strong&gt;によるデメリットは現場でどんなに頑張ろうとどんなに評価されようと、給料一緒ということ。まぁ、お客様にいらないと言われて社内待機になったとしても同額の給料が出る安心感があるので、その安心料だと思います。理にかなっていると思います。ただモチベは上がりません。それによっぽどのことがない限りお客様からいらないって言われない気がしますwあとは、社内向けの活動が発生すること。無駄で仕方がありません。新卒のメンターやら業務改善をチームごとに報告し合うことやら独学した方が100倍効率のいい研修。まぁ、そういったことに関わらなければいい話です。ただ、そんな無駄な活動を全社的に辞めて、その分の人件費なり活動費を社員の給料に割り当てた方がいいと思います。無駄なので。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;業務改善&lt;/strong&gt;については優秀な方は自分で勝手にしていますし、そういった面で評価されるに値しないような人の救済策として、社内活動が存在するっていうのが最善の方法のような気がします。エンジニアとしてやっていけないと思うのならそういう社内活動に精を出してなんとか評価されようとする。素晴らしいと思います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;まとめる&lt;/strong&gt;と未経験者には最適かと。万が一仕事がなくても給料がもらえる、社内研修に参加できる。エンジニア挫折したら転職もありだと思いますが、社内活動などエンジニア以外の面で輝けるかもしれない！&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h2 id=&quot;登録型派遣について思うこと&quot;&gt;登録型派遣について思うこと&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;自分が&lt;/strong&gt;興味のある分野の案件になんとか食い込むこと。登録型派遣の経験はないので推測ですが、最大のメリットは案件を自分で選べることだと思うので活用すべきかと思います。もちろん元からスーパーエンジニアの方は時給を上げることを考えればいいと思います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ただ&lt;/strong&gt;、一般エンジニアの場合は時給の高い案件に就こうにもつけない。時給交渉でもやはり信頼を得るための時間がかかる。だったら割り切ってやりたい分野の経験年数を上げることに特化もありなのではないでしょうか。その経験を引っさげてフリーランスになったら給料がかなり上がると推測しています。あくまで推測です。説得力ゼロです。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h2 id=&quot;フリーランスについて思うこと&quot;&gt;フリーランスについて思うこと&lt;/h2&gt;
&lt;/blockquote&gt;

&lt;p&gt;年収ってどのくらい ⇨ 自分次第&lt;br /&gt;
案件参画できんの ⇨ 自分次第&lt;br /&gt;
何かお金周りの手続き面倒そう ⇨ やり方次第&lt;/p&gt;

&lt;p&gt;いろいろ調べてみた結果、全部自分次第のようです。&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# エージェントの存在意義&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# エージェントの流れ&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# おすすめエージェント&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 調べた結果と感想&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# フリーに対する意見&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 09 May 2017 06:43:47 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/free-rancer/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/free-rancer/</guid>
        
        <category>働き方</category>
        
        
      </item>
    
      <item>
        <title>忘れがちで便利なPowershellまとめ</title>
        <description>&lt;h2 id=&quot;クロージャー&quot;&gt;クロージャー&lt;/h2&gt; &lt;p&gt;クロージャーってなんかカッコいい。コードレビューで、なんでクロージャー使ってんの？の質問に答えられないならオススメしません。&lt;br /&gt; 理にかなったクロージャーはカッコいい。&lt;/p&gt; &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;Closure &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$script&lt;/span&gt;:n &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; + 1 &lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;.GetNewClosure&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$obj1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Closure &lt;span class=&quot;nv&quot;&gt;$obj2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Closure &amp;amp; &lt;span class=&quot;nv&quot;&gt;$obj1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &amp;amp; &lt;span class=&quot;nv&quot;&gt;$obj1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &amp;amp; &lt;span class=&quot;nv&quot;&gt;$obj2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 2&lt;/span&gt; &amp;amp; &lt;span class=&quot;nv&quot;&gt;$obj2&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 3&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h2 id=&quot;filter&quot;&gt;filter&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;は&lt;code class=&quot;highlighter-rouge&quot;&gt;Where-Object&lt;/code&gt;コマンドと同じですね。&lt;/p&gt; &lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 偶数のみ取り出す&lt;/span&gt; 1..10 | ? &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt; % 2 -eq 0 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;h2 id=&quot;map&quot;&gt;map&lt;/h2&gt; &lt;p&gt;&lt;code...</description>
        <pubDate>Mon, 08 May 2017 06:31:05 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/powershell-tricks/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/powershell-tricks/</guid>
        
        <category>powershell</category>
        
        
      </item>
    
      <item>
        <title>忘れがちで便利なJavascriptまとめ</title>
        <description>&lt;h2 id=&quot;空の配列を反復処理する&quot;&gt;空の配列を反復処理する&lt;/h2&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;var array&lt;/code&gt;は長さが3の空の配列であり、Arrayメソッドで反復処理ができない。 &lt;code class=&quot;highlighter-rouge&quot;&gt;var array1&lt;/code&gt;はundefinedに設定された値を3つ持つ配列。値を持つので反復処理可能。 書き方を変えるならば&lt;code class=&quot;highlighter-rouge&quot;&gt;Array(undefined, undefined, undefined)&lt;/code&gt;これと同じ。&lt;/p&gt; &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [undefined, undefined, undefined]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [undefined, undefined, undefined]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [undefined, undefined, undefined]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [0, 1, 2]&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;...</description>
        <pubDate>Mon, 08 May 2017 05:35:48 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/javascript-tricks-1/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/javascript-tricks-1/</guid>
        
        <category>javascript</category>
        
        
      </item>
    
      <item>
        <title>忘れがちで便利なBashまとめ</title>
        <description>&lt;h2 id=&quot;テンプレートが書かれたファイルを複数作成する&quot;&gt;テンプレートが書かれたファイルを複数作成する&lt;/h2&gt; &lt;p&gt;下記サンプルではRubyのユニットテスト（Railsではなく）するためのファイルを複数作成します。 test_1.rbというファイル名のファイルが30個作成されます。ファイルの中身はユニットテストをするために必要な基本的なものが書かれています。 ファイルの中身は別として、ファイルを複数作成したい時には早速使えるかと思います。&lt;/p&gt; &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;initial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; require 'test/unit'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; def methodName&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; end&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; class TestClassName &amp;lt; Test::Unit::TestCase&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;def TestMethodName&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; end &quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1; i &amp;lt; 31; i++&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -e &lt;span class=&quot;nv&quot;&gt;$initial&lt;/span&gt; &amp;gt; test_&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;.rb &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;上記スクリプトファイルのあるディレクトリで実行すると同じ階層に下記のようなファイルが30個作成されます。&lt;/p&gt; &lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test/unit'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;methodName&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestClassName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TestCase&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TestMethodName&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span...</description>
        <pubDate>Mon, 08 May 2017 04:33:48 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/bash-tricks/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/bash-tricks/</guid>
        
        <category>bash</category>
        
        
      </item>
    
      <item>
        <title>忘れがちで便利なRubyまとめ</title>
        <description>&lt;h2 id=&quot;で引数でhashを受け取る&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;**&lt;/code&gt;で引数でHashを受け取る&lt;/h2&gt; &lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [1, [], {}]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [1, [2, 3, 4], {}]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;a: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;b: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; [1, [2, 3, 4], {:a=&amp;gt;1, :b=&amp;gt;2}]&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;...</description>
        <pubDate>Sun, 07 May 2017 17:39:47 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/ruby-tricks/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/ruby-tricks/</guid>
        
        <category>ruby</category>
        
        
        <category>Some series !</category>
        
      </item>
    
      <item>
        <title>About me</title>
        <description>&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;プロフィール&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;名前&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Kazuki Chinone&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;生年月日&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1990/8/16&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;住まい&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tokyo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;スキル&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Javascript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2年&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Ruby&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2年&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Powershell&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4年&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;JQuery&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1年&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;CSS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2年&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;HTML&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2年&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Microsoft System Center&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;SCCM&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2年&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;SCOM&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1年&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;ツール&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;Docker&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1年&quot;&lt;/span&gt;&lt;span...</description>
        <pubDate>Sun, 07 May 2017 06:31:05 +0900</pubDate>
        <link>https://sunoko.github.io/whoami/About-me/</link>
        <guid isPermaLink="true">https://sunoko.github.io/whoami/About-me/</guid>
        
        <category>profile</category>
        
        
      </item>
    
  </channel>
</rss>
